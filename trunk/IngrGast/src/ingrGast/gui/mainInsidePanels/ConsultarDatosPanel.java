/*
 * ConsultarDatosPanel.java
 *
 * Created on July 15, 2007, 6:44 PM
 */

package ingrGast.gui.mainInsidePanels;

import com.toedter.calendar.JTextFieldDateEditor;
import ingrGast.db.Connector;
import ingrGast.db.ResultSetTableModel;
import ingrGast.gui.*;
import ingrGast.gui.dialogs.EditarAsientoDialog;
import ingrGast.interfaces.InsidePanel;
import ingrGast.management.Manager;
import ingrGast.objects.AsientoContable;
import java.awt.Color;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author  Beñat
 */
public class ConsultarDatosPanel extends javax.swing.JPanel implements InsidePanel{
    
    /**
     * Creates new form ConsultarDatosPanel
     */
    public ConsultarDatosPanel(/*MainFrame parent*/) {
        initComponents();
    }
    
    /**
     *
     * @param parent
     */
    public void initData(MainFrame parent){
        this.owner = parent;
        this.manager = this.owner.getManager();
        jTable1.setModel(new ResultSetTableModel(Connector.JDBC_DRIVER, Connector.DATABASE_URL, this.manager.getConnector().getUsername(), this.manager.getConnector().getPassword(), this.manager.constructQueryIngresos(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2)));
        this.setInfoTextIngresos();
        jTable1.getColumnModel().removeColumn(jTable1.getColumnModel().getColumn(jTable1.getColumnModel().getColumnIndex("ID")));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
        jTable2.setModel(new ResultSetTableModel(Connector.JDBC_DRIVER, Connector.DATABASE_URL, this.manager.getConnector().getUsername(), this.manager.getConnector().getPassword(), this.manager.constructQueryGastos(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2)));
        this.setInfoTextGastos();
        jTable2.getColumnModel().removeColumn(jTable2.getColumnModel().getColumn(jTable2.getColumnModel().getColumnIndex("ID")));
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
        jTable3.setModel(new ResultSetTableModel(Connector.JDBC_DRIVER, Connector.DATABASE_URL, this.manager.getConnector().getUsername(), this.manager.getConnector().getPassword(), this.manager.constructQueryTotales(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2)));
        this.setInfoTextTotales();
        jTable3.getColumnModel().removeColumn(jTable3.getColumnModel().getColumn(jTable3.getColumnModel().getColumnIndex("ID")));
        jTable3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
        this.updateComboBoxes();
    }
    
    public void updateData(){
        this.updateTables();
        this.updateComboBoxes();
        this.jComboBox1.setSelectedItem(this.grupo);
        this.jComboBox2.setSelectedItem(this.motivo);
        this.jComboBox3.setSelectedItem(this.proveedor);
        this.jComboBox4.setSelectedItem(this.receptor);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Consultar Datos"));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));
        jLabel2.setText("Grupo:");

        jLabel3.setText("Concepto:");

        jCheckBox1.setText("Fecha:");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jComboBox1.setToolTipText("Selecciona un grupo");

        jComboBox2.setToolTipText("Selecciona un motivo");

        jComboBox3.setToolTipText("Selecciona un proveedor");

        jComboBox4.setToolTipText("Selecciona un receptor");

        jButton1.setText("Filtrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDateChooser1.setToolTipText("D\u00eda-Mes-A\u00f1o");
        Calendar cal = new GregorianCalendar();
        cal.setTime(new Date());
        jDateChooser1.setCalendar(cal);
        jDateChooser1.setEnabled(false);
        ((JTextFieldDateEditor)jDateChooser1.getComponent(1)).setEditable(false);

        jDateChooser2.setToolTipText("D\u00eda-Mes-A\u00f1o");
        Calendar cal2 = new GregorianCalendar();
        cal2.setTime(new Date());
        jDateChooser2.setCalendar(cal2);
        jDateChooser2.setEnabled(false);
        ((JTextFieldDateEditor)jDateChooser2.getComponent(1)).setEditable(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel3)
                    .add(jLabel2)
                    .add(jCheckBox1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jDateChooser1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jComboBox2, 0, 116, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jDateChooser2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jComboBox3, 0, 81, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 80, Short.MAX_VALUE)
                        .add(jButton1)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {jComboBox1, jComboBox2, jComboBox3, jComboBox4}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jButton1))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel2)
                                .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(26, 26, 26)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel3)
                                    .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jCheckBox1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jDateChooser2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jDateChooser1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel4.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jLabel4)
                .addContainerGap(550, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel4)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel5.setText("Total:");

        jLabel1.setText("0\u20ac");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .addContainerGap(507, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel5)
                .add(jLabel1))
        );

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Borrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton2)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton3)))
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(new java.awt.Component[] {jButton2, jButton3}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jTabbedPane1.addTab("Ingresos", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel6.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jLabel6)
                .addContainerGap(550, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel6)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel7.setText("Total:");

        jLabel11.setText("0\u20ac");

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel11)
                .addContainerGap(507, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel7)
                .add(jLabel11))
        );

        jButton4.setText("Editar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Borrar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setShowVerticalLines(false);
        jScrollPane2.setViewportView(jTable2);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton4)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton5)))
                    .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {jButton4, jButton5}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton5))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jTabbedPane1.addTab("Gastos", jPanel5);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel8.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(jLabel8)
                .addContainerGap(550, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel8)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel9.setText(" ");

        jLabel13.setText("Total:");

        jLabel14.setText("0\u20ac");

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel14)
                .add(18, 18, 18)
                .add(jLabel9)
                .addContainerGap(486, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jLabel9)
                .add(jLabel13)
                .add(jLabel14))
        );

        jButton6.setText("Editar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Borrar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setShowVerticalLines(false);
        jScrollPane3.setViewportView(jTable3);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton6)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton7))))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(new java.awt.Component[] {jButton6, jButton7}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jButton6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton7))
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jTabbedPane1.addTab("Totales", jPanel6);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jTable3.getSelectedRow() >= 0){
            int row = jTable3.convertRowIndexToModel(jTable3.getSelectedRow());
            AsientoContable as = null;
            if (row >= 0){
                ResultSetTableModel model = (ResultSetTableModel)jTable3.getModel();
                int asID = new Integer(model.getValueAt(row, 0).toString()).intValue();
                String grupo = model.getValueAt(row, jTable3.convertColumnIndexToModel(jTable3.getColumnModel().getColumnIndex("Grupo"))).toString();
                String motivo = model.getValueAt(row, jTable3.convertColumnIndexToModel(jTable3.getColumnModel().getColumnIndex("Motivo"))).toString();
                String proveedor = model.getValueAt(row, jTable3.convertColumnIndexToModel(jTable3.getColumnModel().getColumnIndex("Proveedor"))).toString();
                String receptor = model.getValueAt(row, jTable3.convertColumnIndexToModel(jTable3.getColumnModel().getColumnIndex("Receptor"))).toString();
                double importe;
                try {
                    importe = new Double(model.getValueAt(row, jTable3.convertColumnIndexToModel(jTable3.getColumnModel().getColumnIndex("Importe"))).toString()).doubleValue();
                } catch (NumberFormatException ex) {
                    ex.printStackTrace();
                    importe = 0;
                }
                Date d = (Date)model.getValueAt(row, jTable3.convertColumnIndexToModel(jTable3.getColumnModel().getColumnIndex("Fecha")));
                Calendar fecha = new GregorianCalendar();
                fecha.setTime(d);
                as = new AsientoContable(asID, grupo, motivo, proveedor, receptor, importe, fecha);
            }
            if(as != null){
                EditarAsientoDialog ead = new EditarAsientoDialog(this.owner, true, as);
                ead.setLocationRelativeTo(null);
                this.owner.setCurrentDialog(ead);
                ead.setVisible(true);
            }
        } else{
            JOptionPane jop = new JOptionPane("No has seleccionado ningún asiento contable. Selecciona una fila e inténtalo de nuevo.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Imposible editar el asiento contable").setVisible(true);
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jTable2.getSelectedRow() >= 0){
            int row = jTable2.convertRowIndexToModel(jTable2.getSelectedRow());
            AsientoContable as = null;
            if (row >= 0){
                ResultSetTableModel model = (ResultSetTableModel)jTable2.getModel();
                int asID = new Integer(model.getValueAt(row, 0).toString()).intValue();
                String grupo = model.getValueAt(row, jTable2.convertColumnIndexToModel(jTable2.getColumnModel().getColumnIndex("Grupo"))).toString();
                String motivo = model.getValueAt(row, jTable2.convertColumnIndexToModel(jTable2.getColumnModel().getColumnIndex("Motivo"))).toString();
                String proveedor = model.getValueAt(row, jTable2.convertColumnIndexToModel(jTable2.getColumnModel().getColumnIndex("Proveedor"))).toString();
                String receptor = model.getValueAt(row, jTable2.convertColumnIndexToModel(jTable2.getColumnModel().getColumnIndex("Receptor"))).toString();
                double importe;
                try {
                    importe = new Double(model.getValueAt(row, jTable2.convertColumnIndexToModel(jTable2.getColumnModel().getColumnIndex("Importe"))).toString()).doubleValue();
                } catch (NumberFormatException ex) {
                    ex.printStackTrace();
                    importe = 0;
                }
                Date d = (Date)model.getValueAt(row, jTable2.convertColumnIndexToModel(jTable2.getColumnModel().getColumnIndex("Fecha")));
                Calendar fecha = new GregorianCalendar();
                fecha.setTime(d);
                as = new AsientoContable(asID, grupo, motivo, proveedor, receptor, importe, fecha);
            }
            if(as != null){
                EditarAsientoDialog ead = new EditarAsientoDialog(this.owner, true, as);
                ead.setLocationRelativeTo(null);
                this.owner.setCurrentDialog(ead);
                ead.setVisible(true);
            }
        } else{
            JOptionPane jop = new JOptionPane("No has seleccionado ningún asiento contable. Selecciona una fila e inténtalo de nuevo.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Imposible editar el asiento contable").setVisible(true);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable1.getSelectedRow() >= 0){
            int row = jTable1.convertRowIndexToModel(jTable1.getSelectedRow());
            AsientoContable as = null;
            if (row >= 0){
                ResultSetTableModel model = (ResultSetTableModel)jTable1.getModel();
                int asID = new Integer(model.getValueAt(row, 0).toString()).intValue();
                String grupo = model.getValueAt(row, jTable1.convertColumnIndexToModel(jTable1.getColumnModel().getColumnIndex("Grupo"))).toString();
                String motivo = model.getValueAt(row, jTable1.convertColumnIndexToModel(jTable1.getColumnModel().getColumnIndex("Motivo"))).toString();
                String proveedor = model.getValueAt(row, jTable1.convertColumnIndexToModel(jTable1.getColumnModel().getColumnIndex("Proveedor"))).toString();
                String receptor = model.getValueAt(row, jTable1.convertColumnIndexToModel(jTable1.getColumnModel().getColumnIndex("Receptor"))).toString();
                double importe;
                try {
                    importe = new Double(model.getValueAt(row, jTable1.convertColumnIndexToModel(jTable1.getColumnModel().getColumnIndex("Importe"))).toString()).doubleValue();
                } catch (NumberFormatException ex) {
                    ex.printStackTrace();
                    importe = 0;
                }
                Date d = (Date)model.getValueAt(row, jTable1.convertColumnIndexToModel(jTable1.getColumnModel().getColumnIndex("Fecha")));
                Calendar fecha = new GregorianCalendar();
                fecha.setTime(d);
                as = new AsientoContable(asID, grupo, motivo, proveedor, receptor, importe, fecha);
            }
            if(as != null){
                EditarAsientoDialog ead = new EditarAsientoDialog(this.owner, true, as);
                ead.setLocationRelativeTo(null);
                this.owner.setCurrentDialog(ead);
                ead.setVisible(true);
            }
        } else{
            JOptionPane jop = new JOptionPane("No has seleccionado ningún asiento contable. Selecciona una fila e inténtalo de nuevo.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Imposible editar el asiento contable").setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (jTable3.getSelectedRow() >= 0){
            int row = jTable3.convertRowIndexToModel(jTable3.getSelectedRow());
            if (row >= 0){
                JOptionPane jop = new JOptionPane();
                //0 -> YES, 1 -> NO
                int option =jop.showConfirmDialog(this, "¿Estas seguro de que quieres borrar el asiento seleccionado?", "Se va a borrar un asiento contable", JOptionPane.YES_NO_OPTION);
                if(option == 0){
                    Integer asID = new Integer(((ResultSetTableModel)jTable3.getModel()).getValueAt(row, 0).toString());
                    manager.borrarAsiento(asID.intValue());
                }
            }
            this.owner.updateData();
        } else{
            JOptionPane jop = new JOptionPane("No has seleccionado ningún asiento contable. Selecciona una fila e inténtalo de nuevo.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Imposible borrar el asiento contable").setVisible(true);
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (jTable2.getSelectedRow() >= 0){
            int row = jTable2.convertRowIndexToModel(jTable2.getSelectedRow());
            if (row >= 0){
                JOptionPane jop = new JOptionPane();
                //0 -> YES, 1 -> NO
                int option =jop.showConfirmDialog(this, "¿Estas seguro de que quieres borrar el asiento seleccionado?", "Se va a borrar un asiento contable", JOptionPane.YES_NO_OPTION);
                if(option == 0){
                    Integer asID = new Integer(((ResultSetTableModel)jTable2.getModel()).getValueAt(row, 0).toString());
                    manager.borrarAsiento(asID.intValue());
                }
            }
            this.owner.updateData();
        } else{
            JOptionPane jop = new JOptionPane("No has seleccionado ningún asiento contable. Selecciona una fila e inténtalo de nuevo.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Imposible borrar el asiento contable").setVisible(true);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setData();
        try {
            ((ResultSetTableModel)jTable1.getModel()).setQuery(this.manager.constructQueryIngresos(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2));
            jTable1.getColumnModel().removeColumn(jTable1.getColumnModel().getColumn(jTable1.getColumnModel().getColumnIndex("ID")));
            this.setInfoTextIngresos();
        } catch (IllegalStateException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        }
        try {
            ((ResultSetTableModel)jTable2.getModel()).setQuery(this.manager.constructQueryGastos(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2));
            jTable2.getColumnModel().removeColumn(jTable2.getColumnModel().getColumn(jTable2.getColumnModel().getColumnIndex("ID")));
            this.setInfoTextGastos();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        }
        try {
            ((ResultSetTableModel)jTable3.getModel()).setQuery(this.manager.constructQueryTotales(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2));
            jTable3.getColumnModel().removeColumn(jTable3.getColumnModel().getColumn(jTable3.getColumnModel().getColumnIndex("ID")));
            this.setInfoTextTotales();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        if(jCheckBox1.isSelected()){
            jDateChooser1.setEnabled(true);
            jDateChooser2.setEnabled(true);
        } else {
            jDateChooser1.setEnabled(false);
            jDateChooser2.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getSelectedRow() >= 0){
            int row = jTable1.convertRowIndexToModel(jTable1.getSelectedRow());
            if (row >= 0){
                JOptionPane jop = new JOptionPane();
                //0 -> YES, 1 -> NO
                int option =jop.showConfirmDialog(this, "¿Estas seguro de que quieres borrar el asiento seleccionado?", "Se va a borrar un asiento contable", JOptionPane.YES_NO_OPTION);
                if(option == 0){
                    Integer asID = new Integer(((ResultSetTableModel)jTable1.getModel()).getValueAt(row, 0).toString());
                    manager.borrarAsiento(asID.intValue());
                }
            }
            this.owner.updateData();
        } else{
            JOptionPane jop = new JOptionPane("No has seleccionado ningún asiento contable. Selecciona una fila e inténtalo de nuevo.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Imposible borrar el asiento contable").setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void setData(){
        if(jComboBox1.getSelectedIndex() > 0)
            this.grupo = jComboBox1.getSelectedItem().toString().trim();
        else
            this.grupo = null;
        if(jComboBox2.getSelectedIndex() > 0)
            this.motivo = jComboBox2.getSelectedItem().toString().trim();
        else
            this.motivo = null;
        if(jComboBox3.getSelectedIndex() > 0)
            this.proveedor = jComboBox3.getSelectedItem().toString().trim();
        else
            this.proveedor = null;
        if(jComboBox4.getSelectedIndex() > 0)
            this.receptor = jComboBox4.getSelectedItem().toString().trim();
        else
            this.receptor = null;
        if(jCheckBox1.isSelected()){
            this.fecha1 = jDateChooser1.getCalendar();
            this.fecha2 = jDateChooser2.getCalendar();
        } else {
            this.fecha1 = null;
            this.fecha2 = null;
        }
    }
    
    private void updateTables(){
        try {
            ((ResultSetTableModel)jTable1.getModel()).refress();
            jTable1.getColumnModel().removeColumn(jTable1.getColumnModel().getColumn(jTable1.getColumnModel().getColumnIndex("ID")));
            this.setInfoTextIngresos();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        }
        try {
            ((ResultSetTableModel)jTable2.getModel()).refress();
            jTable2.getColumnModel().removeColumn(jTable2.getColumnModel().getColumn(jTable2.getColumnModel().getColumnIndex("ID")));
            this.setInfoTextGastos();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        }
        try {
            ((ResultSetTableModel)jTable3.getModel()).refress();
            jTable3.getColumnModel().removeColumn(jTable3.getColumnModel().getColumn(jTable3.getColumnModel().getColumnIndex("ID")));
            this.setInfoTextTotales();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane jop = new JOptionPane("Error al acceder a la base de datos.", JOptionPane.ERROR_MESSAGE);
            jop.createDialog(null, "Error de base de datos").setVisible(true);
        }
    }
    
    private void updateComboBoxes(){
        jComboBox1.removeAllItems();
        Vector <String> vG = this.manager.getGruposNombres();
        vG.add(0, "TODOS");
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(vG));
        
        jComboBox2.removeAllItems();
        Vector <String> vM = this.manager.getConceptosMotivos();
        vM.add(0, "TODOS");
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(vM));
        
        jComboBox3.removeAllItems();
        Vector <String> vP = this.manager.getConceptosProveedores();
        vP.add(0, "TODOS");
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(vP));
        
        jComboBox4.removeAllItems();
        Vector <String> vR = this.manager.getConceptosReceptores();
        vR.add(0, "TODOS");
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(vR));
    }
    
    private void setInfoTextIngresos(){
        int ingNum = ((ResultSetTableModel)jTable1.getModel()).getRowCount();
        if(ingNum <= 0)
            jLabel4.setText("No se ha encontrado ningún ingreso.");
        else if(ingNum == 1)
            jLabel4.setText("Se ha encontrado un ingreso.");
        else
            jLabel4.setText("Se han encontrado " + ingNum + " ingresos.");
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        double totIngr = this.manager.getTotalIngresos(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2);
        jLabel1.setText(nf.format(totIngr));
        if(totIngr > 0)
            jLabel1.setForeground(Color.GREEN);
        else if (totIngr == 0)
            jLabel1.setForeground(Color.BLACK);
        else if (totIngr < 0)
            jLabel1.setForeground(Color.RED);
    }
    
    private void setInfoTextGastos(){
        int gastNum = ((ResultSetTableModel)jTable2.getModel()).getRowCount();
        if(gastNum <= 0)
            jLabel6.setText("No se ha encontrado ningún gasto.");
        else if(gastNum == 1)
            jLabel6.setText("Se ha encontrado un gasto.");
        else
            jLabel6.setText("Se han encontrado " + gastNum + " gastos.");
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        double totGast = this.manager.getTotalGastos(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2);
        jLabel11.setText(nf.format(totGast));
        if(totGast > 0)
            jLabel11.setForeground(Color.GREEN);
        else if (totGast == 0)
            jLabel11.setForeground(Color.BLACK);
        else if (totGast < 0)
            jLabel11.setForeground(Color.RED);
    }
    
    private void setInfoTextTotales(){
        int totNum = ((ResultSetTableModel)jTable3.getModel()).getRowCount();
        if(totNum <= 0)
            jLabel8.setText("No se ha encontrado ninguna entrada.");
        else if(totNum == 1)
            jLabel8.setText("Se ha encontrado una entrada.");
        else
            jLabel8.setText("Se han encontrado " + totNum + " entradas.");
        this.setData();
        double tot = this.manager.getTotal(this.grupo, this.motivo, this.proveedor, this.receptor, this.fecha1, this.fecha2);
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        jLabel14.setText(nf.format(tot));
        if(tot > 0)
            jLabel14.setForeground(Color.GREEN);
        else if (tot == 0)
            jLabel14.setForeground(Color.BLACK);
        else if (tot < 0)
            jLabel14.setForeground(Color.RED);
    }
    
    public void disconnectResultSetTableModels(){
        ((ResultSetTableModel)this.jTable1.getModel()).disconnectFromDatabase();
        ((ResultSetTableModel)this.jTable2.getModel()).disconnectFromDatabase();
        ((ResultSetTableModel)this.jTable3.getModel()).disconnectFromDatabase();
    }
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // Fin de declaración de variables//GEN-END:variables
    
    private MainFrame owner;
    private Manager manager;
    
    private String grupo;
    private String motivo;
    private String proveedor;
    private String receptor;
    private Calendar fecha1;
    private Calendar fecha2;
}
