/*
 * GraficosPanel.java
 *
 * Created on 24 de agosto de 2007, 19:50
 */

package ingrGast.gui;

import ingrGast.gui.charts.datasets.ModifiedDefaultCategoryDataset;
import ingrGast.interfaces.InsidePanel;
import ingrGast.management.Manager;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.sql.SQLException;
import java.util.Vector;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.ui.RectangleEdge;

/**
 *
 * @author  Beñat
 */
public class GraficosPanel extends javax.swing.JPanel implements InsidePanel {
    
    /** Creates new form GraficosPanel */
    public GraficosPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Gr\u00e1ficos"));
        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Balance Anual"));
        jLabel1.setText("A\u00f1o:");

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        jPanel1.add(jPanel2, "card2");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Balance Anual", "Comparativa Anual" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(jComboBox1.getSelectedItem() != null){
            ModifiedDefaultCategoryDataset dataset1 = new ModifiedDefaultCategoryDataset();
            ModifiedDefaultCategoryDataset dataset2 = new ModifiedDefaultCategoryDataset();
            Vector<Vector<Double>> vBalance = this.manager.getBalanceAño(((Integer)jComboBox1.getSelectedItem()).intValue());
            dataset1.addValuesToDataset(vBalance.elementAt(0), "Ingreso", months);
            dataset1.addValuesToDataset(vBalance.elementAt(1), "Gasto", months);
            dataset2.addValuesToDataset(vBalance.elementAt(2), "Total", months);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged
    
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // Fin de declaración de variables//GEN-END:variables
    
    private MainFrame owner;
    private Manager manager;
    
    private String[] months = new String[]{
            "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio",
            "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"
        };
    
    private void chargeComboBox(){
        Vector<Integer> vYears = this.manager.getAñosAsientos();
        this.jComboBox1.removeAllItems();
        for (Integer i: vYears)
            jComboBox1.addItem(i);
    }
    
    public void initData(MainFrame parent) {
        this.owner = parent;
        this.manager = this.owner.getManager();
        this.chargeComboBox();
        
        ChartPanel jPanel3 = new ChartPanel(balanceAnualChart());
        javax.swing.GroupLayout jPanel2Layout = (javax.swing.GroupLayout)jPanel2.getLayout();
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
                );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
                );
    }
    
    public void updateData() {
    }
    
    public void disconnectResultSetTableModels() {
    }
    
    private JFreeChart balanceAnualChart(){
        String[] months = new String[]{
            "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio",
            "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"
        };
        //DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        JDBCCategoryDataset dataset = new JDBCCategoryDataset(this.manager.getConnector().getConnection());
        dataset.setTranspose(true);
        JDBCCategoryDataset dataset1 = new JDBCCategoryDataset(this.manager.getConnector().getConnection());
        try {
            dataset.executeQuery("SELECT Grupo_ID AS Grupo, SUM(Importe) AS Ingresos FROM asientoscontables WHERE Importe >= 0 GROUP BY Grupo_ID");
            dataset1.executeQuery("SELECT Grupo_ID AS Grupo, SUM(Importe) AS Gastos FROM asientoscontables WHERE Importe < 0 GROUP BY Grupo_ID");
            //dataset.executeQuery("SELECT Grupo_ID, SUM(Importe) AS Total FROM asientoscontables WHERE Importe < 0 GROUP BY Grupo_ID");
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        dataset1.setTranspose(true);
        /*int i = 0;
        for(Number value: dataIngresos){
            dataset.setValue(value, "Ingresos", months[i]);
            i++;
        }
        i = 0;
        for(Number value: dataGastos){
            dataset.setValue(value, "Gastos", months[i]);
            i++;
        }*/
        JFreeChart jfreechart = ChartFactory.createLineChart("Balance Anual", "Meses", "Importe", dataset, PlotOrientation.VERTICAL, true, true, false);
        jfreechart.addSubtitle(new TextTitle("Balance de ingresos y gastos obtenidos por mes."));
        CategoryPlot categoryplot = (CategoryPlot)jfreechart.getPlot();
        categoryplot.setDataset(1, dataset1);
        //categoryplot.setBackgroundPaint(Color.lightGray);
        //categoryplot.setRangeGridlinesVisible(false);
        /*NumberAxis numberaxis = (NumberAxis)categoryplot.getRangeAxis();
        numberaxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());*/
        LineAndShapeRenderer lineandshaperenderer = (LineAndShapeRenderer)categoryplot.getRenderer();
        lineandshaperenderer.setShapesVisible(true);
        //lineandshaperenderer.setSeriesFillPaint(0, Color.GREEN);
        lineandshaperenderer.setSeriesPaint(0, Color.GREEN);
        lineandshaperenderer.setSeriesPaint(1, Color.RED);
        //lineandshaperenderer.setDrawOutlines(true);
        lineandshaperenderer.setUseFillPaint(true);
        lineandshaperenderer.setBaseFillPaint(Color.white);
        lineandshaperenderer.setSeriesStroke(0, new BasicStroke(3F));
        lineandshaperenderer.setSeriesStroke(1, new BasicStroke(3F));
        lineandshaperenderer.setSeriesOutlineStroke(0, new BasicStroke(2.0F));
        lineandshaperenderer.setSeriesOutlineStroke(1, new BasicStroke(2.0F));
        lineandshaperenderer.setSeriesShape(0, new java.awt.geom.Ellipse2D.Double(-5D, -5D, 10D, 10D));
        lineandshaperenderer.setSeriesShape(1, new java.awt.geom.Ellipse2D.Double(-5D, -5D, 10D, 10D));
        return jfreechart;
    }
}
